FROM ubuntu:20.04

ARG DOCKER_TAG

ENV ENV_NAME=ai4foodsecurity

# the base image does not have wget
RUN apt-get update
RUN apt-get install -y wget
RUN apt-get install -y vim

# Following the description here:
# https://towardsdatascience.com/conda-pip-and-docker-ftw-d64fe638dc45

SHELL [ "/bin/bash", "--login", "-c" ]

# The kernel environment needs to be copied as root
# Assumes the docker build context as the git project root directory
COPY ./docker/kernel-env-submission.yaml /tmp/

COPY ./docker/entrypoint.sh /usr/local/bin/

USER root

# install miniconda (using fixed version)
ENV CONDA_DIR $HOME/miniconda3
RUN wget --quiet https://repo.anaconda.com/miniconda/Miniconda3-py39_4.10.3-Linux-x86_64.sh -O ~/miniconda.sh  && \
    chmod +x ~/miniconda.sh && \
    ~/miniconda.sh -b -p $CONDA_DIR  && \
    rm ~/miniconda.sh

# make non-activate conda commands available
ENV PATH=$CONDA_DIR/bin:$PATH

# make conda activate command available from /bin/bash --login shells
RUN echo ". $CONDA_DIR/etc/profile.d/conda.sh" >> ~/.profile

# make conda activate command available from /bin/bash --interative shells
RUN source ~/.bashrc
RUN conda init bash

# create a project directory inside user home
ENV PROJECT_DIR $HOME/app
RUN mkdir $PROJECT_DIR
WORKDIR $PROJECT_DIR

# build the conda environment
#ENV ENV_PREFIX $PWD/env
RUN conda update --name base --channel defaults conda && \
    conda env create --file /tmp/kernel-env-submission.yaml --force && \
    conda clean --all --yes

# install kernel
RUN conda run -n "${ENV_NAME}" python -m ipykernel install --name "EDC-GPU" --display-name "EDC-GPU ${DOCKER_TAG} (Python3)"
	
# we need to patch the kernel.json to set up PATH :(
# by default, the kernel bin dir is not included in PATH
# when the kernel executes a notebook, but we need it for sentinelhub.config
# https://github.com/jupyter/notebook/issues/4527
# https://github.com/ipython/ipykernel/issues/395
# since we already have that, also adding version to the metadata for edc-jlab
# since we already have that, also adding ~/.local/bin
RUN python3 -c "\
import os; \
import json; \
env_name = os.environ['ENV_NAME']; \
new_path = f'/opt/conda/envs/{env_name}/bin:/home/jovyan/.local/bin:/opt/conda/condabin:/opt/conda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'; \
kernel_json = f'/usr/local/share/jupyter/kernels/edc-gpu/kernel.json'; \
update = {'env': {'PATH': new_path}, 'metadata': {'version': '${DOCKER_TAG}'}}; \
json.dump({**json.load(open(kernel_json)), **update}, open(kernel_json, 'w'), indent=4)"

ADD docker/edc.py .
RUN mv edc.py /opt/conda/envs/"${ENV_NAME}"/lib/python*/site-packages
USER $NB_UID

# Final notebook and illustrations
COPY ./notebooks/final/EagleEyes_SouthAfrica.ipynb .
COPY ./notebooks/final/fig_south_africa_crop_id_barplot.png .
COPY ./notebooks/final/fig_south_africa_crop_id_ndvi.png .
COPY ./notebooks/final/fig_south_africa_predictions_map.png .

# Source code preprocessing
COPY ./ai4food/dataloaders/custom_data_transform.py ./ai4food/dataloaders/custom_data_transform.py
COPY ./ai4food/dataloaders/custom_planet_reader.py ./ai4food/dataloaders/custom_planet_reader.py
COPY ./ai4food/dataloaders/custom_sentinel_1_reader.py ./ai4food/dataloaders/custom_sentinel_1_reader.py
COPY ./ai4food/dataloaders/custom_sentinel_2_reader.py ./ai4food/dataloaders/custom_sentinel_2_reader.py
COPY ./ai4food/dataloaders/preprocessor.py ./ai4food/dataloaders/preprocessor.py
	
# Source code model
COPY ./ai4food/models/models/pse.py ./ai4food/models/models/pse.py
COPY ./ai4food/models/models/stclassifier_combined.py ./ai4food/models/models/stclassifier_combined.py
COPY ./ai4food/training.py ./ai4food/training.py
COPY ./ai4food/evaluation_utils.py ./ai4food/evaluation_utils.py
COPY ./ai4food/focal_loss.py ./ai4food/focal_loss.py

# trained models
COPY ./final_submission_south_africa/best_model_fold_0.pt ./trained_models/
COPY ./final_submission_south_africa/best_model_fold_1.pt ./trained_models/
COPY ./final_submission_south_africa/best_model_fold_2.pt ./trained_models/
COPY ./final_submission_south_africa/best_model_fold_3.pt ./trained_models/
COPY ./final_submission_south_africa/best_model_fold_4.pt ./trained_models/
COPY ./final_submission_south_africa/best_model_fold_5.pt ./trained_models/
COPY ./final_submission_south_africa/best_model_fold_6.pt ./trained_models/
COPY ./final_submission_south_africa/best_model_fold_7.pt ./trained_models/
COPY ./final_submission_south_africa/best_model_fold_8.pt ./trained_models/
COPY ./final_submission_south_africa/best_model_fold_9.pt ./trained_models/

# submission
COPY ./final_submission_south_africa/submission.json .


ENTRYPOINT [ "/usr/local/bin/entrypoint.sh" ]

#	CMD ["jupyter", "lab", "--port=8889", "--no-browser", "--ip=0.0.0.0", "--allow-root"]
CMD jupyter notebook --port=8888 --allow-root
